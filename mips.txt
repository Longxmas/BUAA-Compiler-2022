.data
.text
addiu $sp, $sp, -28
j func_label_main
#<--------------- FUNC main--------------->
func_label_main:
#<---- var a@<1,0> = 1 ---->
#<---- Alloc $a2 which index is 0 for a ---->
addiu $a2, $zero, 1
#<---- a@<1,0> = input() ---->
li $v0, 5
syscall
move $a2, $v0
#<---- SET #T0@<1,0> := a@<1,0> == 2 ---->
#<---- Alloc $a3 which index is 1 for #T0 ---->
seq $a3, $a2, 2
#<---- b@<2,0> = a@<1,0> ADD 2 ---->
#<---- Alloc $t0 which index is 2 for b ---->
addiu $t0, $a2, 2
#<---- c@<1,0> = b@<2,0> ADD a@<1,0> ---->
#<---- Alloc $t1 which index is 3 for c ---->
addu $t1, $t0, $a2
#<---- GEN_LABEL while_judge_label_0: ---->
#<---- Cancel $a2 which index is 0 for a ---->
#<---- Cancel $a3 which index is 1 for #T0 ---->
sw $a3, 12($sp)
#<---- Cancel $t0 which index is 2 for b ---->
#<---- Cancel $t1 which index is 3 for c ---->
sw $t1, 8($sp)
while_judge_label_0:
#<---- JUMP_IF #T0@<1,0> == 0 while_end_label_0 ---->
#<---- Alloc $a2 which index is 0 for #T0 ---->
lw $a2, 12($sp)
beq $a2, 0, while_end_label_0
#<---- NEW_BLOCK <2,0> ---->
#<---- END_BLOCK <2,0> ---->
#<---- JUMP while_judge_label_0 ---->
#<---- Cancel $a2 which index is 0 for #T0 ---->
sw $a2, 12($sp)
j while_judge_label_0
#<---- GEN_LABEL while_end_label_0: ---->
while_end_label_0:
#<---- print c@<1,0> ---->
#<---- Alloc $a2 which index is 0 for c ---->
lw $a2, 8($sp)
move $a0, $a2
li $v0, 1
syscall
#<---- return 0 ---->
li $v0, 0
li $v0, 10
syscall
#<---- END_BLOCK <1,0> ---->
