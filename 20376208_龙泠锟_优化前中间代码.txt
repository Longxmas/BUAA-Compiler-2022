#str0: "a="
#str1: ", b="
#str2: "\n"
#str3: "a>b\n"
#str4: "a<=b\n"
#str5: "x="
#str6: "\n"
#str7: "input = "
#str8: "\n"
#str9: "Illegal input\n"
#str10: "cur i="
#str11: "\n"
#str12: "20373472\n"
#str13: "\n"
<--------------- FUNC compare--------------->
FORM_VAR_DEF x@<1,0> compare
FORM_VAR_DEF y@<1,0> compare
NEW_BLOCK [1, 0]
print #str0
print x@<1,0>
print #str1
print y@<1,0>
print #str2
SET #T0 := y@<1,0> < x@<1,0>
JUMP_IF #T0 == 1 or_label_0
JUMP_IF #T0 == 0 Else_start_label_0
GEN_LABEL or_label_0:
print #str3
JUMP ifElse_end_label_0
GEN_LABEL Else_start_label_0:
print #str4
GEN_LABEL ifElse_end_label_0:
END_BLOCK [1, 0]
return 
<--------------- END_FUNC compare--------------->
<--------------- FUNC test--------------->
FORM_VAR_DEF x@<1,1> test
NEW_BLOCK [1, 1]
print #str5
print x@<1,1>
print #str6
SET #T1 := x@<1,1> < 0
JUMP_IF #T1 == 1 or_label_1
JUMP_IF #T1 == 0 Else_start_label_1
GEN_LABEL or_label_1:
print #str7
print x@<1,1>
print #str8
JUMP ifElse_end_label_1
GEN_LABEL Else_start_label_1:
print #str9
GEN_LABEL ifElse_end_label_1:
END_BLOCK [1, 1]
return 
<--------------- END_FUNC test--------------->
<--------------- FUNC printI--------------->
FORM_VAR_DEF n@<1,2> printI
NEW_BLOCK [1, 2]
var i@<1,2>
ASSIGN i@<1,2> = 0
GEN_LABEL while_judge_label_0:
SET #T2 := i@<1,2> < n@<1,2>
JUMP_IF #T2 == 1 or_label_2
JUMP_IF #T2 == 0 while_end_label_0
GEN_LABEL or_label_2:
NEW_BLOCK [2, 0]
print #str10
print i@<1,2>
print #str11
#T3 = i@<1,2> ADD 1
ASSIGN i@<1,2> = #T3
SET #T4 := i@<1,2> == n@<1,2>
JUMP_IF #T4 == 1 or_label_3
JUMP_IF #T4 == 0 ifElse_end_label_2
GEN_LABEL or_label_3:
NEW_BLOCK [3, 0]
JUMP while_end_label_0
END_BLOCK [3, 0]
GEN_LABEL ifElse_end_label_2:
END_BLOCK [2, 0]
JUMP while_judge_label_0
GEN_LABEL while_end_label_0:
END_BLOCK [1, 2]
return 
<--------------- END_FUNC printI--------------->
<--------------- FUNC main--------------->
NEW_BLOCK [1, 3]
var a@<1,3> = 4
var b@<1,3> = 7
print #str12
PRE_CALL compare
PUSH_PARA a@<1,3> #function: compare #arg: x
PUSH_PARA b@<1,3> #function: compare #arg: y
FUNC_CALL compare
ASSIGN #T5 = %RTX
PRE_CALL printI
PUSH_PARA 2 #function: printI #arg: n
FUNC_CALL printI
ASSIGN #T6 = %RTX
#T7 = a@<1,3> SUB b@<1,3>
print #T7
print #str13
#T8 = a@<1,3> ADD b@<1,3>
SET #T9 := 10 < #T8
JUMP_IF #T9 == 1 or_label_4
JUMP_IF #T9 == 0 ifElse_end_label_3
GEN_LABEL or_label_4:
PRE_CALL test
#T10 = a@<1,3> SUB b@<1,3>
PUSH_PARA #T10 #function: test #arg: x
FUNC_CALL test
ASSIGN #T11 = %RTX
GEN_LABEL ifElse_end_label_3:
return 0
END_BLOCK [1, 3]
<--------------- END_FUNC main--------------->
