#str0: "Hello World\n"
#str1: "vm_PE = "
#str2: "\n"
var c_01@<0,0> = 1
var c_02@<0,0> = 2
var c_03@<0,0> = 3
var c_04@<0,0> = 4
var c_05@<0,0> = 11
var c_06@<0,0>[0] = 1
var c_06@<0,0>[1] = 2
var c_06@<0,0>[2] = 3
var c_07@<0,0>[0] = 1
var c_07@<0,0>[1] = 2
var c_07@<0,0>[2] = 3
var c_07@<0,0>[3] = 4
var v_01@<0,0> = 1
var v_02@<0,0> = 0
var v_03@<0,0> = 3
var v_04@<0,0> = 0
var v_05@<0,0> = 2
var v_06@<0,0>[0] = 1
var v_06@<0,0>[1] = 2
var v_06@<0,0>[2] = 3
var v_07@<0,0>[0] = 1
var v_07@<0,0>[1] = 2
var v_07@<0,0>[2] = 3
var v_07@<0,0>[3] = 4
<--------------- FUNC func_01--------------->
NEW_BLOCK <1,0>
print #str0
NEW_BLOCK <2,0>
END_BLOCK <2,0>
return 
END_BLOCK <1,0>
return 
<--------------- END_FUNC func_01--------------->
<--------------- FUNC func_02--------------->
NEW_BLOCK <1,1>
#T0@<1,1> = v_01@<0,0> ADD 1
ASSIGN v_01@<0,0> = #T0@<1,1>
var y@<1,1> = 0
var x@<1,1> = 1
NEW_BLOCK <2,1>
var x@<2,1> = 2
NEW_BLOCK <3,0>
var x@<3,0> = 3
NEW_BLOCK <4,0>
#T1@<4,0> = x@<3,0> ADD 1
ASSIGN y@<1,1> = #T1@<4,0>
END_BLOCK <4,0>
#T2@<3,0> = y@<1,1> ADD x@<3,0>
ASSIGN y@<1,1> = #T2@<3,0>
END_BLOCK <3,0>
#T3@<2,1> = y@<1,1> ADD x@<2,1>
ASSIGN y@<1,1> = #T3@<2,1>
END_BLOCK <2,1>
#T4@<1,1> = y@<1,1> ADD x@<1,1>
ASSIGN y@<1,1> = #T4@<1,1>
#T5@<1,1> = y@<1,1> ADD 7
#T6@<1,1> = #T5@<1,1> ADD 0
#T7@<1,1> = #T6@<1,1> SUB 8
return #T7@<1,1>
END_BLOCK <1,1>
<--------------- END_FUNC func_02--------------->
<--------------- FUNC func_03--------------->
FORM_VAR_DEF a@<1,2> func_03
NEW_BLOCK <1,2>
var v_01@<1,2> = 1
#T8@<1,2> = a@<1,2> MUL v_01@<1,2>
#T9@<1,2> = #T8@<1,2> MUL v_05@<0,0>
#T10@<1,2> = #T9@<1,2> DIV 123
return #T10@<1,2>
END_BLOCK <1,2>
<--------------- END_FUNC func_03--------------->
<--------------- FUNC func_04--------------->
FORM_VAR_DEF a@<1,3> func_04
FORM_VAR_DEF b@<1,3> func_04
NEW_BLOCK <1,3>
var v_01@<1,3> = 1
var v_02@<1,3> = 2
#T11@<1,3> = a@<1,3> MUL v_01@<1,3>
#T12@<1,3> = b@<1,3> DIV v_02@<1,3>
#T13@<1,3> = #T11@<1,3> ADD #T12@<1,3>
PRE_CALL func_02@0
FUNC_CALL func_02@0
ASSIGN #T14@<1,3> = %RTX
#T15@<1,3> = #T13@<1,3> ADD #T14@<1,3>
PRE_CALL func_03@1
PUSH_PARA b@<1,3> #function: func_03@1 #arg: a
FUNC_CALL func_03@1
ASSIGN #T16@<1,3> = %RTX
#T17@<1,3> = #T15@<1,3> SUB #T16@<1,3>
return #T17@<1,3>
END_BLOCK <1,3>
<--------------- END_FUNC func_04--------------->
<--------------- FUNC func_05--------------->
FORM_VAR_DEF a@<1,4> func_05
NEW_BLOCK <1,4>
LOAD #T18@<1,4> = a@<1,4>[0]
#T19@<1,4> = #T18@<1,4> MUL 100
return #T19@<1,4>
END_BLOCK <1,4>
<--------------- END_FUNC func_05--------------->
<--------------- FUNC func_06--------------->
FORM_VAR_DEF a@<1,5> func_06
NEW_BLOCK <1,5>
LOAD #T20@<1,5> = a@<1,5>[0]
LOAD #T21@<1,5> = a@<1,5>[4]
#T22@<1,5> = #T20@<1,5> ADD #T21@<1,5>
LOAD #T23@<1,5> = a@<1,5>[8]
#T24@<1,5> = #T22@<1,5> ADD #T23@<1,5>
return #T24@<1,5>
END_BLOCK <1,5>
<--------------- END_FUNC func_06--------------->
<--------------- FUNC func_07--------------->
FORM_VAR_DEF a@<1,6> func_07
FORM_VAR_DEF b@<1,6> func_07
FORM_VAR_DEF c@<1,6> func_07
NEW_BLOCK <1,6>
LOAD #T25@<1,6> = b@<1,6>[0]
#T26@<1,6> = a@<1,6> ADD #T25@<1,6>
LOAD #T27@<1,6> = c@<1,6>[0]
#T28@<1,6> = #T26@<1,6> ADD #T27@<1,6>
return #T28@<1,6>
END_BLOCK <1,6>
<--------------- END_FUNC func_07--------------->
<--------------- FUNC test_if_and_while_01--------------->
NEW_BLOCK <1,7>
var t_01@<1,7> = -10
var t_02@<1,7> = 0
var t_03@<1,7> = 1
var t_04@<1,7> = 0
var i@<1,7> = 0
var j@<1,7> = 100
SET #T29@<1,7> := t_01@<1,7> == 0
SET #T30@<1,7> := 0 <= #T29@<1,7>
JUMP_IF #T30@<1,7> == 0 ifElse_end_label_0
NEW_BLOCK <2,2>
ASSIGN t_03@<1,7> = 2
ASSIGN t_04@<1,7> = -1
END_BLOCK <2,2>
GEN_LABEL ifElse_end_label_0:
SET #T31@<1,7> := t_02@<1,7> < 0
JUMP_IF #T31@<1,7> == 0 Else_start_label_0
NEW_BLOCK <2,3>
ASSIGN t_04@<1,7> = v_01@<0,0>
SET #T32@<2,3> := t_03@<1,7> == 1
JUMP_IF #T32@<2,3> == 0 Else_start_label_1
PRE_CALL func_02@2
FUNC_CALL func_02@2
ASSIGN #T33@<2,3> = %RTX
ASSIGN t_04@<1,7> = #T33@<2,3>
JUMP ifElse_end_label_2
GEN_LABEL Else_start_label_1:
ASSIGN t_04@<1,7> = 56088
GEN_LABEL ifElse_end_label_2:
END_BLOCK <2,3>
JUMP ifElse_end_label_1
GEN_LABEL Else_start_label_0:
NEW_BLOCK <2,4>
PRE_CALL func_04@3
PUSH_PARA v_05@<0,0> #function: func_04@3 #arg: b
PUSH_PARA v_01@<0,0> #function: func_04@3 #arg: a
FUNC_CALL func_04@3
ASSIGN #T34@<2,4> = %RTX
#T35@<2,4> = 0 SUB #T34@<2,4>
ASSIGN t_04@<1,7> = #T35@<2,4>
END_BLOCK <2,4>
GEN_LABEL ifElse_end_label_1:
GEN_LABEL while_judge_label_0:
SET #T36@<1,7> := 0 < t_04@<1,7>
JUMP_IF #T36@<1,7> == 0 while_end_label_0
#T37@<1,7> = t_04@<1,7> SUB 1
ASSIGN t_04@<1,7> = #T37@<1,7>
JUMP while_judge_label_0
GEN_LABEL while_end_label_0:
GEN_LABEL while_judge_label_1:
SET #T38@<1,7> := t_01@<1,7> < 0
JUMP_IF #T38@<1,7> == 0 while_end_label_1
NEW_BLOCK <2,5>
#T39@<2,5> = i@<1,7> ADD 1
ASSIGN i@<1,7> = #T39@<2,5>
SET #T40@<2,5> := i@<1,7> <= 10
JUMP_IF #T40@<2,5> == 0 ifElse_end_label_3
JUMP while_judge_label_1
GEN_LABEL ifElse_end_label_3:
SET #T41@<2,5> := i@<1,7> == 12
JUMP_IF #T41@<2,5> == 0 ifElse_end_label_4
JUMP while_end_label_1
GEN_LABEL ifElse_end_label_4:
END_BLOCK <2,5>
JUMP while_judge_label_1
GEN_LABEL while_end_label_1:
SET #T42@<1,7> := 40 < j@<1,7>
JUMP_IF #T42@<1,7> == 0 Else_start_label_2
NEW_BLOCK <2,6>
SET #T43@<2,6> := 50 < j@<1,7>
JUMP_IF #T43@<2,6> == 0 Else_start_label_3
NEW_BLOCK <3,1>
SET #T44@<3,1> := 60 < j@<1,7>
JUMP_IF #T44@<3,1> == 0 Else_start_label_4
NEW_BLOCK <4,1>
SET #T45@<4,1> := 70 < j@<1,7>
JUMP_IF #T45@<4,1> == 0 Else_start_label_5
NEW_BLOCK <5,0>
ASSIGN i@<1,7> = 0
END_BLOCK <5,0>
JUMP ifElse_end_label_8
GEN_LABEL Else_start_label_5:
ASSIGN i@<1,7> = -1
GEN_LABEL ifElse_end_label_8:
END_BLOCK <4,1>
JUMP ifElse_end_label_7
GEN_LABEL Else_start_label_4:
ASSIGN i@<1,7> = -2
GEN_LABEL ifElse_end_label_7:
END_BLOCK <3,1>
JUMP ifElse_end_label_6
GEN_LABEL Else_start_label_3:
ASSIGN i@<1,7> = -3
GEN_LABEL ifElse_end_label_6:
END_BLOCK <2,6>
JUMP ifElse_end_label_5
GEN_LABEL Else_start_label_2:
ASSIGN i@<1,7> = -4
GEN_LABEL ifElse_end_label_5:
return i@<1,7>
END_BLOCK <1,7>
<--------------- END_FUNC test_if_and_while_01--------------->
<--------------- FUNC test_if_and_while_02--------------->
NEW_BLOCK <1,8>
var i@<1,8> = 0
JUMP_IF v_01@<0,0> == 0 ifElse_end_label_9
#T46@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T46@<1,8>
GEN_LABEL ifElse_end_label_9:
SET #T47@<1,8> := 123 < v_01@<0,0>
JUMP_IF #T47@<1,8> == 0 ifElse_end_label_10
#T48@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T48@<1,8>
GEN_LABEL ifElse_end_label_10:
#T49@<1,8> = 114514 MUL v_01@<0,0>
PRE_CALL func_03@4
PUSH_PARA v_01@<0,0> #function: func_03@4 #arg: a
FUNC_CALL func_03@4
ASSIGN #T50@<1,8> = %RTX
#T51@<1,8> = #T50@<1,8> ADD 6
#T52@<1,8> = 1 DIV #T51@<1,8>
#T53@<1,8> = #T49@<1,8> ADD #T52@<1,8>
SET #T54@<1,8> := #T53@<1,8> < 1
JUMP_IF #T54@<1,8> == 0 ifElse_end_label_11
#T55@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T55@<1,8>
GEN_LABEL ifElse_end_label_11:
PRE_CALL func_03@5
PUSH_PARA v_01@<0,0> #function: func_03@5 #arg: a
FUNC_CALL func_03@5
ASSIGN #T56@<1,8> = %RTX
PRE_CALL func_04@6
PUSH_PARA v_05@<0,0> #function: func_04@6 #arg: b
PUSH_PARA v_01@<0,0> #function: func_04@6 #arg: a
FUNC_CALL func_04@6
ASSIGN #T57@<1,8> = %RTX
SET #T58@<1,8> := #T56@<1,8> <= #T57@<1,8>
JUMP_IF #T58@<1,8> == 0 ifElse_end_label_12
#T59@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T59@<1,8>
GEN_LABEL ifElse_end_label_12:
PRE_CALL func_03@7
PUSH_PARA v_05@<0,0> #function: func_03@7 #arg: a
FUNC_CALL func_03@7
ASSIGN #T60@<1,8> = %RTX
SET #T61@<1,8> := #T60@<1,8> <= 123
JUMP_IF #T61@<1,8> == 0 ifElse_end_label_13
#T62@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T62@<1,8>
GEN_LABEL ifElse_end_label_13:
SET #T63@<1,8> := 123 < v_01@<0,0>
PRE_CALL func_03@8
PUSH_PARA v_01@<0,0> #function: func_03@8 #arg: a
FUNC_CALL func_03@8
ASSIGN #T64@<1,8> = %RTX
PRE_CALL func_04@9
PUSH_PARA v_05@<0,0> #function: func_04@9 #arg: b
PUSH_PARA v_01@<0,0> #function: func_04@9 #arg: a
FUNC_CALL func_04@9
ASSIGN #T65@<1,8> = %RTX
SET #T66@<1,8> := #T64@<1,8> <= #T65@<1,8>
SET #T67@<1,8> := #T63@<1,8> == #T66@<1,8>
JUMP_IF #T67@<1,8> == 0 ifElse_end_label_14
#T68@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T68@<1,8>
GEN_LABEL ifElse_end_label_14:
SET #T69@<1,8> := 123 < v_01@<0,0>
PRE_CALL func_03@10
PUSH_PARA v_01@<0,0> #function: func_03@10 #arg: a
FUNC_CALL func_03@10
ASSIGN #T70@<1,8> = %RTX
PRE_CALL func_04@11
PUSH_PARA v_05@<0,0> #function: func_04@11 #arg: b
PUSH_PARA v_01@<0,0> #function: func_04@11 #arg: a
FUNC_CALL func_04@11
ASSIGN #T71@<1,8> = %RTX
SET #T72@<1,8> := #T71@<1,8> <= #T70@<1,8>
SET #T73@<1,8> := #T69@<1,8> != #T72@<1,8>
JUMP_IF #T73@<1,8> == 0 ifElse_end_label_15
#T74@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T74@<1,8>
GEN_LABEL ifElse_end_label_15:
var j@<1,8> = 1
var k@<1,8> = 2
SET #T75@<1,8> := j@<1,8> == 1
JUMP_IF #T75@<1,8> == 0 ifElse_end_label_16
PRE_CALL func_02@12
FUNC_CALL func_02@12
ASSIGN #T76@<1,8> = %RTX
JUMP_IF #T76@<1,8> == 0 ifElse_end_label_16
SET #T77@<1,8> := j@<1,8> == 2
JUMP_IF #T77@<1,8> == 0 ifElse_end_label_16
#T78@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T78@<1,8>
GEN_LABEL ifElse_end_label_16:
SET #T79@<1,8> := k@<1,8> != 2
JUMP_IF #T79@<1,8> == 1 or_label_0
PRE_CALL func_02@13
FUNC_CALL func_02@13
ASSIGN #T80@<1,8> = %RTX
JUMP_IF #T80@<1,8> == 0 ifElse_end_label_17
GEN_LABEL or_label_0:
#T81@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T81@<1,8>
GEN_LABEL ifElse_end_label_17:
SET #T82@<1,8> := j@<1,8> == 2
JUMP_IF #T82@<1,8> == 1 or_label_1
SET #T83@<1,8> := j@<1,8> == 3
JUMP_IF #T83@<1,8> == 1 or_label_1
SET #T84@<1,8> := j@<1,8> == 4
JUMP_IF #T84@<1,8> == 1 or_label_1
SET #T85@<1,8> := j@<1,8> == 5
JUMP_IF #T85@<1,8> == 0 ifElse_end_label_18
GEN_LABEL or_label_1:
#T86@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T86@<1,8>
GEN_LABEL ifElse_end_label_18:
SET #T87@<1,8> := j@<1,8> == 2
JUMP_IF #T87@<1,8> == 1 or_label_2
SET #T88@<1,8> := j@<1,8> == 1
JUMP_IF #T88@<1,8> == 0 ifElse_end_label_19
SET #T89@<1,8> := k@<1,8> == 2
JUMP_IF #T89@<1,8> == 0 ifElse_end_label_19
GEN_LABEL or_label_2:
#T90@<1,8> = i@<1,8> ADD 1
ASSIGN i@<1,8> = #T90@<1,8>
GEN_LABEL ifElse_end_label_19:
return i@<1,8>
END_BLOCK <1,8>
<--------------- END_FUNC test_if_and_while_02--------------->
<--------------- FUNC main--------------->
NEW_BLOCK <1,9>
var vc@<1,9> = 1
var vc_2@<1,9> = 3
var c_01@<1,9> = 2
var v_PE_01@<1,9> = 114514
var v_PE_02@<1,9> = v_01@<0,0>
var v_PE_03@<1,9> = 2
#T91@<1,9> = 7 ADD 55
#T92@<1,9> = #T91@<1,9> SUB 66
#T93@<1,9> = #T92@<1,9> ADD -77
#T94@<1,9> = #T93@<1,9> SUB 88
PRE_CALL func_02@14
FUNC_CALL func_02@14
ASSIGN #T95@<1,9> = %RTX
#T96@<1,9> = #T94@<1,9> ADD #T95@<1,9>
var v_PE_04@<1,9> = #T96@<1,9>
var v_UE_01@<1,9> = v_PE_01@<1,9>
PRE_CALL func_03@15
PUSH_PARA v_01@<0,0> #function: func_03@15 #arg: a
FUNC_CALL func_03@15
ASSIGN #T97@<1,9> = %RTX
var v_UE_02@<1,9> = #T97@<1,9>
var v_UE_03_1@<1,9> = -114514
PRE_CALL func_04@16
PUSH_PARA v_03@<0,0> #function: func_04@16 #arg: b
PUSH_PARA v_01@<0,0> #function: func_04@16 #arg: a
FUNC_CALL func_04@16
ASSIGN #T98@<1,9> = %RTX
#T99@<1,9> = 0 SUB #T98@<1,9>
var v_UE_03_2@<1,9> = #T99@<1,9>
var v_ME_01@<1,9> = v_UE_01@<1,9>
#T100@<1,9> = 10 MUL v_01@<0,0>
var v_ME_02@<1,9> = #T100@<1,9>
PRE_CALL func_03@17
PUSH_PARA v_01@<0,0> #function: func_03@17 #arg: a
FUNC_CALL func_03@17
ASSIGN #T101@<1,9> = %RTX
#T102@<1,9> = #T101@<1,9> DIV 2
var v_ME_03@<1,9> = #T102@<1,9>
PRE_CALL func_04@18
PUSH_PARA v_05@<0,0> #function: func_04@18 #arg: b
PUSH_PARA v_01@<0,0> #function: func_04@18 #arg: a
FUNC_CALL func_04@18
ASSIGN #T103@<1,9> = %RTX
#T104@<1,9> = 0 SUB #T103@<1,9>
#T105@<1,9> = -1 MOD #T104@<1,9>
var v_ME_04@<1,9> = #T105@<1,9>
var v_AE_01@<1,9> = v_ME_01@<1,9>
#T106@<1,9> = 114514 MUL v_01@<0,0>
PRE_CALL func_03@19
PUSH_PARA v_01@<0,0> #function: func_03@19 #arg: a
FUNC_CALL func_03@19
ASSIGN #T107@<1,9> = %RTX
#T108@<1,9> = #T107@<1,9> ADD 6
#T109@<1,9> = 2 DIV #T108@<1,9>
#T110@<1,9> = #T106@<1,9> ADD #T109@<1,9>
var v_AE_02@<1,9> = #T110@<1,9>
PRE_CALL func_04@20
PUSH_PARA v_05@<0,0> #function: func_04@20 #arg: b
PUSH_PARA v_01@<0,0> #function: func_04@20 #arg: a
FUNC_CALL func_04@20
ASSIGN #T111@<1,9> = %RTX
#T112@<1,9> = 0 SUB #T111@<1,9>
#T113@<1,9> = -1 MOD #T112@<1,9>
#T114@<1,9> = #T113@<1,9> SUB 123
var v_AE_03@<1,9> = #T114@<1,9>
var vs_const@<1,9>[0] = 1
var vs_const@<1,9>[1] = 1
var vs_01@<1,9>[0] = 1
var vs_01@<1,9>[1] = 2
var vs_01@<1,9>[2] = 3
var vs_02@<1,9>[0] = 11
var vs_02@<1,9>[1] = 12
var vs_02@<1,9>[2] = 13
var vs_02@<1,9>[3] = 21
var vs_02@<1,9>[4] = 22
var vs_02@<1,9>[5] = 23
var vs_02@<1,9>[6] = 31
var vs_02@<1,9>[7] = 32
var vs_02@<1,9>[8] = 33
var vs_03@<1,9>
var vs_04@<1,9>
var vs_05@<1,9> = 1
LOAD #T115@<1,9> = vs_01@<1,9>[1]
var vs_06@<1,9> = #T115@<1,9>
LOAD #T116@<1,9> = vs_02@<1,9>[5]
var vs_07@<1,9> = #T116@<1,9>
SAVE vs_01@<1,9>[0] = 10
SAVE vs_02@<1,9>[5] = 10
#T117@<1,9> = vs_05@<1,9> ADD vs_06@<1,9>
#T118@<1,9> = #T117@<1,9> ADD vs_07@<1,9>
PRE_CALL func_05@21
PUSH_PARA vs_02@<1,9>[0] #function: func_05@21 #arg: a
FUNC_CALL func_05@21
ASSIGN #T119@<1,9> = %RTX
#T120@<1,9> = #T118@<1,9> ADD #T119@<1,9>
PRE_CALL func_06@22
PUSH_PARA vs_02@<1,9> #function: func_06@22 #arg: a
FUNC_CALL func_06@22
ASSIGN #T121@<1,9> = %RTX
#T122@<1,9> = #T120@<1,9> ADD #T121@<1,9>
PRE_CALL func_07@23
PUSH_PARA vs_02@<1,9> #function: func_07@23 #arg: c
PUSH_PARA vs_01@<1,9> #function: func_07@23 #arg: b
PUSH_PARA v_01@<0,0> #function: func_07@23 #arg: a
FUNC_CALL func_07@23
ASSIGN #T123@<1,9> = %RTX
#T124@<1,9> = #T122@<1,9> ADD #T123@<1,9>
var vs_test@<1,9> = #T124@<1,9>
var vm@<1,9>
var v_02@<1,9> = 1
var vm_01@<1,9>
ASSIGN vm_01@<1,9> = 0
PRE_CALL test_if_and_while_01@24
FUNC_CALL test_if_and_while_01@24
ASSIGN #T125@<1,9> = %RTX
var vm_i_1@<1,9> = #T125@<1,9>
PRE_CALL test_if_and_while_02@25
FUNC_CALL test_if_and_while_02@25
ASSIGN #T126@<1,9> = %RTX
var vm_i_2@<1,9> = #T126@<1,9>
PRE_CALL func_02@26
FUNC_CALL func_02@26
ASSIGN #T127@<1,9> = %RTX
var vm_02@<1,9> = #T127@<1,9>
PRE_CALL func_03@27
PUSH_PARA v_03@<0,0> #function: func_03@27 #arg: a
FUNC_CALL func_03@27
ASSIGN #T128@<1,9> = %RTX
var vm_03@<1,9> = #T128@<1,9>
PRE_CALL func_04@28
PUSH_PARA v_03@<0,0> #function: func_04@28 #arg: b
PUSH_PARA v_02@<1,9> #function: func_04@28 #arg: a
FUNC_CALL func_04@28
ASSIGN #T129@<1,9> = %RTX
var vm_04@<1,9> = #T129@<1,9>
#T130@<1,9> = v_AE_01@<1,9> DIV v_AE_02@<1,9>
#T131@<1,9> = #T130@<1,9> MOD v_AE_03@<1,9>
var vm_AE@<1,9> = #T131@<1,9>
#T132@<1,9> = v_ME_01@<1,9> MUL v_ME_02@<1,9>
#T133@<1,9> = v_ME_03@<1,9> MUL v_ME_04@<1,9>
#T134@<1,9> = #T132@<1,9> ADD #T133@<1,9>
var vm_ME@<1,9> = #T134@<1,9>
#T135@<1,9> = v_UE_01@<1,9> SUB v_UE_02@<1,9>
#T136@<1,9> = #T135@<1,9> SUB v_UE_03_1@<1,9>
#T137@<1,9> = #T136@<1,9> SUB v_UE_03_1@<1,9>
#T138@<1,9> = #T137@<1,9> SUB v_UE_03_2@<1,9>
var vm_UE@<1,9> = #T138@<1,9>
#T139@<1,9> = v_PE_01@<1,9> ADD v_PE_02@<1,9>
#T140@<1,9> = #T139@<1,9> ADD v_PE_03@<1,9>
#T141@<1,9> = #T140@<1,9> ADD v_PE_04@<1,9>
var vm_PE@<1,9> = #T141@<1,9>
print #str1
print vm_PE@<1,9>
print #str2
return 0
END_BLOCK <1,9>
<--------------- END_FUNC main--------------->
